{"version":3,"sources":["webpack:///./src/utils/utils.js","webpack:///./src/templates/EventPage.jsx"],"names":["formatDate","dateString","date","Date","getDate","getMonth","getFullYear","EventTitle","styled","h1","EventDetail","p","colors","darkGrey","EventPage","data","markdownRemark","html","frontmatter","title","host","dangerouslySetInnerHTML","__html","pageQuery"],"mappings":"6FAAA,kCAAO,IAAMA,EAAa,SAAAC,GACxB,IAAMC,EAAO,IAAIC,KAAKF,GACtB,OAAUC,EAAKE,UAAf,KAA4BF,EAAKG,WAAa,GAA9C,IAAmDH,EAAKI,gB,kCCF1D,sIASMC,EAAaC,IAAOC,GAAV,wEAAGD,CAAH,0BAIVE,EAAcF,IAAOG,EAAV,yEAAGH,CAAH,oCACNI,IAAOC,UAwBHC,UApBG,SAAC,GAAc,IAAD,IAAXC,KACgBC,eAA3BC,EADsB,EACtBA,KAAMC,EADgB,EAChBA,YACd,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAOD,EAAYC,QACxB,kBAACZ,EAAD,KAAaW,EAAYC,OACzB,kBAACT,EAAD,KACGV,YAAWkB,EAAYhB,MACvBgB,EAAYE,KAAZ,MAAyBF,EAAYE,KAAS,IAGjD,6BAASC,wBAAyB,CAAEC,OAAQL,OAW3C,IAAMM,EAAS","file":"component---src-templates-event-page-jsx-2e7c9ec9594aea48dbac.js","sourcesContent":["export const formatDate = dateString => {\n  const date = new Date(dateString)\n  return `${date.getDate()}.${date.getMonth() + 1}.${date.getFullYear()}`\n}\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport Layout from \"../components/Layout\"\nimport styled from \"styled-components\"\nimport { colors } from \"../utils/styles\"\nimport Seo from \"../components/Seo\"\nimport { formatDate } from \"../utils/utils\"\n\nconst EventTitle = styled.h1`\n  margin-bottom: 0.4em;\n`\n\nconst EventDetail = styled.p`\n  color: ${colors.darkGrey};\n  padding-bottom: 1.4em;\n`\n\nconst EventPage = ({ data }) => {\n  const { html, frontmatter } = data.markdownRemark\n  return (\n    <Layout>\n      <Seo title={frontmatter.title} />\n      <EventTitle>{frontmatter.title}</EventTitle>\n      <EventDetail>\n        {formatDate(frontmatter.date)}\n        {frontmatter.host ? ` @ ${frontmatter.host}` : \"\"}\n      </EventDetail>\n\n      <section dangerouslySetInnerHTML={{ __html: html }} />\n    </Layout>\n  )\n}\n\nEventPage.propTypes = {\n  data: PropTypes.any,\n}\n\nexport default EventPage\n\nexport const pageQuery = graphql`\n  query EventsBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        date\n        speakers\n        host\n        title\n      }\n      html\n    }\n  }\n`\n"],"sourceRoot":""}