{"version":3,"sources":["webpack:///./src/components/event.jsx","webpack:///./src/pages/index.jsx"],"names":["EventCard","styled","div","colors","lightPink","white","EventTitle","h3","DateSpan","span","HostInfo","p","Event","title","date","host","slug","to","EventContainer","PlainText","pageQuery","Index","data","siteTitle","site","siteMetadata","events","edges","organizers","map","event","key","node","frontmatter","fields"],"mappings":"+6BAMA,IAAMA,EAAYC,IAAOC,IAAV,IAEOC,IAAOC,UAClBD,IAAOE,MACIF,IAAOC,UAILD,IAAOC,UACPD,IAAOE,MAClBF,IAAOC,WAKdE,EAAaL,IAAOM,GAAV,KAKVC,EAAWP,IAAOQ,KAAV,KAORC,EAAWT,IAAOU,EAAV,KAuBCC,EAnBD,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KAClC,OACE,kBAAC,OAAD,CAAMC,GAAID,GACR,kBAAChB,EAAD,KACE,kBAACM,EAAD,KAAaO,GACZC,GAAQ,kBAACN,EAAD,cAAiBM,GAC1B,kBAACJ,EAAD,kBAAqBK,M,2kBChC7B,IAAMG,EAAiBjB,IAAOC,IAAV,KAoBdiB,GAVqBlB,IAAOC,IAAV,KAUND,IAAOU,EAAV,MAwCFS,GAFEC,UAlCD,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACTC,EAAYD,EAAKE,KAAKC,aAAaZ,MACnCa,EAASJ,EAAKI,OAAOC,MACRL,EAAKM,WAAWD,MAEnC,OACE,kBAAC,IAAD,CAAQd,MAAOU,GACb,kBAAC,IAAD,MACA,mEACA,kBAACJ,EAAD,8SAGA,2CACA,kBAACD,EAAD,KACGQ,EAAOG,KAAI,SAAAC,GAAK,OAAI,kBAAC,EAAD,CACnBC,IAAKD,EAAME,KAAKC,YAAYpB,MAC5BA,MAAOiB,EAAME,KAAKC,YAAYpB,MAC9BC,KAAMgB,EAAME,KAAKC,YAAYnB,KAC7BC,KAAMe,EAAME,KAAKC,YAAYlB,KAC7BC,KAAMc,EAAME,KAAKE,OAAOlB,aAiBZ","file":"component---src-pages-index-jsx-3738b812afb169793a1e.js","sourcesContent":["import React from 'react'\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport { colors } from \"../utils/styles\"\n\nconst EventCard = styled.div`\n  padding: 1.2em;\n  background-color: ${colors.lightPink};\n  color: ${colors.white};\n  border: 1px solid ${colors.lightPink};\n  min-height: 12em;\n  border-radius: 0.3em;\n  &:hover {\n    border: 1px solid ${colors.lightPink};\n    background-color: ${colors.white};\n    color: ${colors.lightPink};\n    transform: rotate(.8deg);\n  }\n`\n\nconst EventTitle = styled.h3`\n  margin-top: .8em;\n  color: inherit;\n`\n\nconst DateSpan = styled.span`\n  text-transform: uppercase;\n  font-size: 0.9em;\n  margin-bottom: 1.2em;\n  box-sizing: border-box;\n`\n\nconst HostInfo = styled.p`\n  margin: 0;\n`\n\nconst Event = ({ title, date, host, slug  }) => {\n  return (\n    <Link to={slug}>\n      <EventCard >\n        <EventTitle>{title}</EventTitle>\n        {date && <DateSpan>Date: {date}</DateSpan>}\n        <HostInfo>Hosted by {host}</HostInfo>\n      </EventCard>\n    </Link>\n  )\n}\n\nEvent.propTypes = {\n  title: PropTypes.string.isRequired,\n  host: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n  date: PropTypes.string\n}\n\nexport default Event","// Gatsby supports TypeScript natively!\nimport React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\nimport Event from \"../components/event\"\nimport Bio from \"../components/bio\"\nimport styled from \"styled-components\"\n\n\nconst EventContainer = styled.div`\n  display: grid;\n  grid-template-columns: 50% 50%;\n  column-gap: 1em;\n  row-gap: 1em;\n  @media (max-width: 650px) {\n    grid-template-columns: 100%;\n  }\n`\n\nconst OrganizerContainer = styled.div`\n  display: grid;\n  grid-template-columns: 33% 33% 33%;\n  column-gap: 1em;\n  row-gap: 1em;\n  @media (max-width: 650px) {\n    grid-template-columns: 100%;\n  }\n`\n\nconst PlainText = styled.p`\n  color: #808285;\n`\n\nconst Index = ({ data }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const events = data.events.edges\n  const organizers = data.organizers.edges\n\n  return (\n    <Layout title={siteTitle}>\n      <SEO />\n      <h2>We are a computer science community</h2>\n      <PlainText>\n        Turku.py is a programming community for women and non-binaries in Turku, Finland. We organize meetups, workshops and afterworks that aim to support the local tech culture, share skills and knowlegde and inspire people from minority groups in the fields of programming, devops and data science.\n      </PlainText>\n      <h2>Past events</h2>\n      <EventContainer>\n        {events.map(event => <Event\n          key={event.node.frontmatter.title}\n          title={event.node.frontmatter.title}\n          date={event.node.frontmatter.date}\n          host={event.node.frontmatter.host}\n          slug={event.node.fields.slug}\n        />)}\n      </EventContainer>\n      {/* TODO implement this */}\n      {/* <OrganizerContainer>\n        {organizers.map(organizer => <Bio\n          key={organizer.node.frontmatter.github}\n          name={organizer.node.frontmatter.name}\n          github={organizer.node.frontmatter.github}\n        />)}\n      </OrganizerContainer> */}\n    </Layout>\n  )\n}\n\nexport default Index\n\nexport const pageQuery = graphql`\nquery {\n  site {\n    siteMetadata {\n      title\n    }\n  }\n  events:allMarkdownRemark(sort: {fields: [frontmatter___date], order: DESC}, filter: {frontmatter: {type: {eq: \"event\"}}}) {\n    edges {\n      node {\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          host\n          date\n          speakers\n        }\n      }\n    }\n  }\n  organizers:allMarkdownRemark(sort: {fields: [frontmatter___date], order: DESC}, filter: {frontmatter: {type: {eq: \"organizer\"}}}) {\n    edges {\n      node {\n        fields {\n          slug\n        }\n        frontmatter {\n          name\n          github\n        }\n        html\n      }\n    }\n  }\n}\n`\n"],"sourceRoot":""}